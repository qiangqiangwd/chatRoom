{"version":3,"sources":["connect.js"],"names":[],"mappings":"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","file":"connect-compiled.js","sourcesContent":["/**\r\n * Created by Administrator on 2017/9/5 0005.\r\n */\r\n\r\n\r\n\r\nwindow.onload = () => {\r\n    //实例化程序\r\n    var chart = new CqChart();\r\n    chart.init();\r\n};\r\n\r\n//定义我们的chart类\r\nvar CqChart = function() {\r\n    this.socket = null;\r\n};\r\n\r\n//向原型添加业务方法\r\nCqChart.prototype = {\r\n    //初始化程序\r\n    //该方法用于登录+显示人数和退出登录信息\r\n    init() {//此方法初始化程序\r\n        var that = this;\r\n        var loading1 = layer.load(2);\r\n        //建立到服务器的socket连接\r\n        this.socket = io.connect();\r\n        //监听socket的connect事件，此事件表示连接已经建立\r\n        this.socket.on('connect', function() {\r\n            layer.close(loading1);\r\n            //标题改变\r\n            $('.loginTitle').text('欢迎登录...');\r\n            //显示输入框\r\n            $('.loginBox').eq(0).show();\r\n            //连接到服务器后，显示昵称输入框\r\n            $('#nicknameInput').focus();\r\n        });\r\n        $('#loginSure').click(()=>{\r\n            var nickName = $('#nicknameInput').val();\r\n            var loading = layer.load(2);\r\n            //设置昵称不为空\r\n            if(nickName.trim().length != 0){\r\n                //不为空，则发起一个login事件并将输入的昵称发送到服务器\r\n                that.socket.emit('login', nickName);\r\n                layer.close(loading);\r\n            } else{\r\n                layer.msg('请输入昵称...',{time:1000});\r\n                $('#nicknameInput').val('').focus();\r\n                layer.close(loading);\r\n            }\r\n        });\r\n\r\n        //昵称重复时调用\r\n        this.socket.on('nickExisted', () => {\r\n            layer.msg('昵称已拥有...',{time:1000});//显示昵称被占用的提示\r\n        });\r\n        //登录成功后的操作\r\n        this.socket.on('loginSuccess', nickname =>{\r\n            $('#shadowBox').hide();//隐藏弹出层\r\n            layer.msg('欢迎回来~  ' + nickname,{time:1000});\r\n            $('#nickName').text(nickname);\r\n\r\n            //判断在线人数（只有在登录后才能进行人数判断）\r\n            that.socket.on('system', (nickName, userCount, type) => {\r\n                //判断用户是连接还是离开以显示不同的信息\r\n                var msg = '<div class=\"someDate clearfix\">' +\r\n                    '<span>'+ nickName + '&nbsp;' + (type == 'login' ? ' 加入' : ' 离开') +'房间</span>' +\r\n                    '</div>';\r\n\r\n                $('#contentBox').append(msg);\r\n                scroll();\r\n                //将在线人数显示到页面顶部\r\n                $('#onlineN').text(userCount);\r\n            });\r\n\r\n            //发送消息\r\n            $('#uploadBtn').click(function(){\r\n                var str = $('#textarea').val();\r\n                //当点击提交按钮时\r\n                htmlStr(str,nickname); //页面显示内容（同时发送该用户的昵称）\r\n                scroll(); //框跟随内容变动而变动\r\n            });\r\n\r\n            //接收消息并对消息进行处理(内容+名字+发送类别[文字or图片])\r\n            that.socket.on('getInf',(msg ,name,type)=>{\r\n                //当不为本人时\r\n                if(name!=nickname) that.showNewMsg(name , msg, type);\r\n\r\n                // console.log('接收：' + msg.trim());\r\n            });\r\n\r\n            //发送图片操作\r\n            $('#uploadImg').change((e)=>{\r\n                var _that = e.target;\r\n                // console.log(e.target);\r\n                // console.log($(this));\r\n                //检查是否有文件被选中\r\n                if (_that.files.length != 0) {\r\n                    //获取文件并用FileReader进行读取\r\n                    var file = _that.files[0],\r\n                        reader = new FileReader();\r\n\r\n                    //判断浏览器是否支持fileReader\r\n                    if (!reader) {\r\n                        layer.msg('你的浏览器暂不支持fileReader',{time:1000});\r\n                        _that.value = '';\r\n                        return;\r\n                    }\r\n                    reader.onload = function(e) {\r\n                        //读取成功，显示到页面并发送到服务器\r\n                        _that.value = '';\r\n                        // that.socket.emit('uploadImg', e.target.result);\r\n                        // that._displayImage('me', e.target.result);\r\n                        htmlStr('',nickname,e.target.result);\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n                    scroll(); //框跟随内容变动而变动\r\n                }\r\n            });\r\n        });\r\n\r\n    }\r\n    // 该方法用于将接收的消息显示在页面上(非自己的额内容)\r\n    ,showNewMsg(user, msg, type, color){\r\n        var msgStr = '<div class=\"clientBox clearfix\">' +\r\n            '<div class=\"cntName f-l\">' +\r\n            '<div class=\"name\">'+ user +'</div>';  //名字\r\n        if(type == 'image'){\r\n            msgStr +='<div class=\"infCnt\">' +\r\n                '<img src=\"'+ msg +'\" />' +\r\n                '</div>' +   //内容\r\n                '</div></div>';\r\n        }else{\r\n            msgStr +='<div class=\"infCnt\" style=\"color: '+ (color || '#333') +';\">'+ _showEmoji(msg) +'</div>' +   //内容\r\n                '</div></div>';\r\n        }\r\n\r\n        $('#contentBox').append(msgStr);\r\n        scroll();\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}